<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>翻译 on zhimoe</title><link>https://zhimoe.github.io/categories/%E7%BF%BB%E8%AF%91/</link><description>Recent content in 翻译 on zhimoe</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Thu, 08 Jul 2021 21:29:57 +0800</lastBuildDate><atom:link href="https://zhimoe.github.io/categories/%E7%BF%BB%E8%AF%91/index.xml" rel="self" type="application/rss+xml"/><item><title>开源与心理健康[翻译]</title><link>https://zhimoe.github.io/post/open-source-mental-health/</link><pubDate>Thu, 08 Jul 2021 21:29:57 +0800</pubDate><guid>https://zhimoe.github.io/post/open-source-mental-health/</guid><description>&lt;p>我一位亲爱的朋友,也是高产的Redox OS贡献者jD91mZM2在2021年3月去世了,年仅18岁.他参与了2018、2019和2020年的Redox OS夏季代码活动.他在开发Redox OS的各个方面都做出了贡献,从内核,到relibc,到移植程序.他的工作详细介绍可以在&lt;a href="https://www.redox-os.org/news/">Redox OS新闻&lt;/a>中署名为jD91mZM2的帖子看到.&lt;br>
这个帖子可能是黑暗的、深沉的、沉重的、原始的、未经编辑的.如果你和我们中的许多人一样有自己的问题,请随时与我联系：https://twitter.com/jeremy_soller.在这种情况下,我不建议阅读这篇文章的其他内容.我的结论是,开源要成为可持续发展,还有大量的工作要做,而其中很大一部分是对社区及其成员的健康的关怀.&lt;/p></description></item><item><title>Tour of Rusts Standard Library Traits[翻译]</title><link>https://zhimoe.github.io/post/tour-of-rusts-standard-library-traits/</link><pubDate>Sun, 11 Apr 2021 21:47:02 +0800</pubDate><guid>https://zhimoe.github.io/post/tour-of-rusts-standard-library-traits/</guid><description>&lt;p>关于rust trait非常好的介绍,比rust book详细,系统.&lt;/p></description></item><item><title>如何实现一个拼写检查器[翻译]</title><link>https://zhimoe.github.io/post/spell-correct/</link><pubDate>Sun, 25 Oct 2020 20:01:27 +0800</pubDate><guid>https://zhimoe.github.io/post/spell-correct/</guid><description>&lt;p>谷歌AI负责人norvig在07年写的如何实现一个拼写纠正器的经典博文&lt;a href="https://norvig.com/spell-correct.html">How to Write a Spelling Corrector&lt;/a>.&lt;br>
上面的链接已经是16年更新过了,程序也更新到了python3.&lt;br>
中文版的翻译 &lt;a href="https://blog.csdn.net/suixinsuiyuan33/article/details/69215082">如何实现一个拼写纠正器&lt;/a> 还是基于07年版本的.&lt;/p></description></item><item><title>前端静态资源图片优化[翻译]</title><link>https://zhimoe.github.io/post/%E5%89%8D%E7%AB%AF%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E5%9B%BE%E7%89%87%E4%BC%98%E5%8C%96/</link><pubDate>Sun, 19 May 2019 11:07:26 +0800</pubDate><guid>https://zhimoe.github.io/post/%E5%89%8D%E7%AB%AF%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E5%9B%BE%E7%89%87%E4%BC%98%E5%8C%96/</guid><description>&lt;p>GTmetrix是一个前端页面测试的网站,可以发现你的站点哪些图片加载速度较慢,并针对性的优化.&lt;br>
source:&lt;a href="https://gtmetrix.com/blog/how-to-optimize-images-a-practical-guide/">How to Optimize Images: A Practical Guide&lt;/a>&lt;/p></description></item><item><title>使用redis的hash优化内存使用[翻译]</title><link>https://zhimoe.github.io/post/%E4%BD%BF%E7%94%A8redis%E7%9A%84hash%E4%BC%98%E5%8C%96%E5%86%85%E5%AD%98%E4%BD%BF%E7%94%A8/</link><pubDate>Sun, 31 Mar 2019 00:11:50 +0800</pubDate><guid>https://zhimoe.github.io/post/%E4%BD%BF%E7%94%A8redis%E7%9A%84hash%E4%BC%98%E5%8C%96%E5%86%85%E5%AD%98%E4%BD%BF%E7%94%A8/</guid><description>&lt;p>使用redis的hash优化内存使用&lt;/p>
&lt;h3 id="问题和方案">问题和方案&lt;/h3>
&lt;p>场景: 有3亿张图片放在对象存储(DELL ECS/AMAZON EC2)上面,现在需要保存图片的id-&amp;gt;用户id的映射.最直接的思路是:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>set &lt;span style="color:#a31515">&amp;#34;media:1155220&amp;#34;&lt;/span> &lt;span style="color:#a31515">&amp;#34;user1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set &lt;span style="color:#a31515">&amp;#34;media:1155221&amp;#34;&lt;/span> &lt;span style="color:#a31515">&amp;#34;user2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样设计key之后3亿张图片需要21GB的内存,因为redis的string是线性增长的.&lt;/p></description></item><item><title>Jupyter Notebook Install New Package[翻译]</title><link>https://zhimoe.github.io/post/jupyter-notebook-install-new-package/</link><pubDate>Thu, 01 Nov 2018 19:04:32 +0800</pubDate><guid>https://zhimoe.github.io/post/jupyter-notebook-install-new-package/</guid><description>&lt;h3 id="notes">notes&lt;/h3>
&lt;p>在pycharm写代码中如果使用到新的package,例如&lt;code>numpy&lt;/code>,只需要输入&lt;code>import numpy&lt;/code> 然后ALT+ENTER在提示中选择install new package即可.&lt;/p>
&lt;p>在notebook中,网上的教程都说是&lt;code>!pip install numpy&lt;/code>. 但是这个可能有坑.究其原因是因为:&lt;/p></description></item></channel></rss>