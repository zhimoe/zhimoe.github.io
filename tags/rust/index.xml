<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rust on zhimoe</title><link>https://zhimoe.github.io/tags/rust/</link><description>Recent content in rust on zhimoe</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Sun, 11 Apr 2021 21:47:02 +0800</lastBuildDate><atom:link href="https://zhimoe.github.io/tags/rust/index.xml" rel="self" type="application/rss+xml"/><item><title>Tour of Rusts Standard Library Traits[翻译]</title><link>https://zhimoe.github.io/post/tour-of-rusts-standard-library-traits/</link><pubDate>Sun, 11 Apr 2021 21:47:02 +0800</pubDate><guid>https://zhimoe.github.io/post/tour-of-rusts-standard-library-traits/</guid><description>&lt;p>关于rust trait非常好的介绍,比rust book详细,系统.&lt;/p></description></item><item><title>Associated Type in Rust</title><link>https://zhimoe.github.io/post/type-in-rust/</link><pubDate>Sun, 20 Sep 2020 20:30:41 +0800</pubDate><guid>https://zhimoe.github.io/post/type-in-rust/</guid><description>&lt;p>Associated Type and generic diff in rust&lt;/p>
&lt;h2 id="type-outside-impl">type outside impl&lt;/h2>
&lt;p>a &lt;code>type Foo = Bar&lt;/code> outside is just type alias. most used in generic type.&lt;/p>
&lt;p>like:&lt;code> type Thunk = Box&amp;lt;dyn Fn() + Send + 'static&amp;gt;;&lt;/code>&lt;/p>
&lt;h2 id="type-inside-impl">type inside impl&lt;/h2>
&lt;p>&lt;code>type&lt;/code> in an &lt;code>impl&lt;/code> defines an associated type. associated type可以理解为一个类型占位符,在trait的方法声明中使用.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">pub&lt;/span> &lt;span style="color:#a90d91">trait&lt;/span> &lt;span style="color:#a90d91">Iterator&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">type&lt;/span> &lt;span style="color:#3f6e75">Item&lt;/span>; &lt;span style="color:#177500">// or type T: Display;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">fn&lt;/span> &lt;span style="color:#000">next&lt;/span>(&lt;span style="color:#000">&amp;amp;&lt;/span>&lt;span style="color:#a90d91">mut&lt;/span> &lt;span style="color:#5b269a">self&lt;/span>) -&amp;gt; &lt;span style="color:#a90d91">Option&lt;/span>&lt;span style="color:#000">&amp;lt;&lt;/span>&lt;span style="color:#5b269a">Self&lt;/span>::&lt;span style="color:#000">Item&lt;/span>&lt;span style="color:#000">&amp;gt;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>基于MDX的web词典</title><link>https://zhimoe.github.io/post/mdict-web/</link><pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate><guid>https://zhimoe.github.io/post/mdict-web/</guid><description>&lt;p>Mdict项目是一个糅合了MDX词典、ES例句搜索和AI模型翻译的多源搜索功能Web词典.特别适合部署在内网中学习使用或者给孩子学习使用.&lt;br>
python版本增加了一个机器学习模型翻译.rust版本也有模型,但是还没来得及加.&lt;/p>
&lt;h3 id="mdict-py">mdict-py&lt;/h3>
&lt;p>&lt;a href="https://github.com/zhimoe/mdict-py">mdict-py源码&lt;/a>&lt;/p>
&lt;p>Mdict项目是一个糅合了MDX词典、ES例句搜索和AI模型翻译的多源搜索功能Web词典.特别适合部署在内网中学习使用或者给孩子学习使用.&lt;/p>
&lt;p>特点：&lt;/p>
&lt;ol>
&lt;li>自动识别中英文选择对应mdx词典,目前英文词典包含牛津8和朗文4,中文词典包含汉语词典3&lt;/li>
&lt;li>英文尝试拼写纠错功能,动词时态纠错&lt;/li>
&lt;li>如果配置了中文会尝试搜索朗文的例句,模糊搜索,对于有英语基础的同学很有用&lt;/li>
&lt;li>如果配置了AI模型,会使用机器学习模型翻译,翻译结果比较粗糙,但是可以参考&lt;/li>
&lt;/ol></description></item><item><title>Rust Ownerships Lifetimes教程</title><link>https://zhimoe.github.io/post/rust-ownership-lifetimes/</link><pubDate>Sat, 22 Feb 2020 15:55:13 +0800</pubDate><guid>https://zhimoe.github.io/post/rust-ownership-lifetimes/</guid><description>&lt;p>some notes on rust ownership,reference,string and &amp;amp;str, and lifetimes&lt;/p></description></item><item><title>SpringBoot应用和Rust应用的Dockerfile最佳实践</title><link>https://zhimoe.github.io/post/dockerfile-best-practices/</link><pubDate>Mon, 03 Feb 2020 11:30:55 +0800</pubDate><guid>https://zhimoe.github.io/post/dockerfile-best-practices/</guid><description>&lt;p>记录spring boot和rust项目的Dockerfile的最佳实践.&lt;/p>
&lt;h2 id="spring-boot应用dockerfile">spring boot应用Dockerfile&lt;/h2>
&lt;p>spring.io提供了一个boot应用的&lt;a href="https://spring.io/guides/topicals/spring-boot-docker">Dockerfile&lt;/a>指导.&lt;br>
不过有个问题,这个Dockerfile使用的maven是项目源码里面copy过去的.在一般企业项目中这么做显然不规范,直接使用maven基础镜像更合理.&lt;/p></description></item><item><title>Rust Packages Crates Mod Notes</title><link>https://zhimoe.github.io/post/rust-packages-crates-mod/</link><pubDate>Sun, 12 Jan 2020 20:03:33 +0800</pubDate><guid>https://zhimoe.github.io/post/rust-packages-crates-mod/</guid><description>&lt;p>初学rust对于项目的package和crate的关系,module和文件的关系有点理不清.做了一点笔记.&lt;/p>
&lt;h2 id="packages-crates-and-modules">packages, crates and modules&lt;/h2>
&lt;p>A Cargo.toml is a package. and must have a package name, like&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#000">package&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">name&lt;/span> = &lt;span style="color:#c41a16">&amp;#34;actix-web&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>